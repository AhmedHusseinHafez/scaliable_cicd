# fastlane/Fastfile
default_platform(:ios)

fastlane_require "dotenv"
Dotenv.overload ".env.secrets" if File.exist?(".env.secrets")

$keychain_name = SecureRandom.uuid
$keychain_password = SecureRandom.hex(100)

$dart_define_env_key = "DART_DEFINE"
$app_identifier = ENV["APP_IDENTIFIER"] || "com.company.scalablecicd.staging"
$is_ci = ENV["CI"]

platform :ios do
  ######################################################
  # Lane ŸÑÿ™ÿ¨ŸáŸäÿ≤ ÿßŸÑŸÄ flavor
  ######################################################
  private_lane :flavor_config do |options|
    flavor = options[:flavor] || "staging"
    UI.message "üëâ Setting flavor to #{flavor}"
    ENV[$dart_define_env_key] = "flavor=#{flavor}"
  end

  ######################################################
  # Lane ŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
  ######################################################
  desc "Login to App Store Connect"
  lane :login do
       api_key = app_store_connect_api_key(
            key_id:  ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
            issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
            key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"],
        )
  end

  ######################################################
  # Lane ŸÑŸÖÿ≤ÿßŸÖŸÜÿ© ÿßŸÑÿ¥ŸáÿßÿØÿßÿ™
  ######################################################
  desc "Sync certificates and provisioning profiles"
  lane :match_sync do
    login
    if $is_ci
        create_keychain(
            name: $keychain_name,
            password: $keychain_password,
            default_keychain: true,
            unlock: false,
            timeout: 0,
            lock_when_sleeps: true
        )
    
      match(
        readonly: true,
        type: "appstore",
        app_identifier: $app_identifier,
        keychain_name:$keychain_name,
        keychain_password: $keychain_password
      )
    else
      match(readonly: true, type: "appstore", app_identifier: $app_identifier)
      match(readonly: true, type: "development", app_identifier: $app_identifier)
    end
  end

  ######################################################
  # Lane ŸÑŸÑÿ®ŸÜÿßÿ°
  ######################################################
  desc "Build iOS App"
  lane :build do |options|
    flavor_config(options)
    match_sync

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "staging", 
      clean: true,
      configuration: "Release",
      export_method: "app-store",
    #   export_options: {
    #     provisioningProfiles: {
    #       $app_identifier => "match AppStore com.company.scalablecicd.staging"
    #     }
    #   },
      export_team_id: "KXF5M678R5", 
      xcargs: "-allowProvisioningUpdates DEVELOPMENT_TEAM=KXF5M678R5",
    )
  end

  ######################################################
  # Lane ŸÑŸÑÿ±ŸÅÿπ ÿπŸÑŸâ TestFlight
  ######################################################
  desc "Upload build to TestFlight"
  lane :upload do |options|
    login
    upload_to_testflight(
      ipa: Actions.lane_context[SharedValues::IPA_OUTPUT_PATH],
      skip_waiting_for_build_processing: false
    )
  end
end
