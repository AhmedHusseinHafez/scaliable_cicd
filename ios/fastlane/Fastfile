# fastlane/Fastfile
default_platform(:ios)

fastlane_require "dotenv"
Dotenv.overload ".env.secrets" if File.exist?(".env.secrets")

$dart_define_env_key = "DART_DEFINE"
$app_identifier = ENV["APP_IDENTIFIER"] || "com.company.scalablecicd.staging"
$is_ci = ENV["CI"]

platform :ios do
  ######################################################
  # Lane ŸÑÿ™ÿ¨ŸáŸäÿ≤ ÿßŸÑŸÄ flavor
  ######################################################
  private_lane :flavor_config do |options|
    flavor = options[:flavor] || "staging"
    UI.message "üëâ Setting flavor to #{flavor}"
    ENV[$dart_define_env_key] = "flavor=#{flavor}"
  end

  ######################################################
  # Lane ŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
  ######################################################
  desc "Login to App Store Connect"
  lane :login do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"],
      is_key_content_base64: true,
      in_house: false
    )
  end

  ######################################################
  # Lane ŸÑŸÖÿ≤ÿßŸÖŸÜÿ© ÿßŸÑÿ¥ŸáÿßÿØÿßÿ™
  ######################################################
  desc "Sync certificates and provisioning profiles"
  lane :match_sync do
    login
    if $is_ci
      setup_keychain(
        name: "fastlane_tmp_keychain",
        password: "fastlane_pwd"
      )
      match(
        readonly: true,
        type: "appstore",
        app_identifier: $app_identifier,
        keychain_name: "fastlane_tmp_keychain",
        keychain_password: "fastlane_pwd"
      )
    else
      match(readonly: true, type: "appstore", app_identifier: $app_identifier)
      match(readonly: true, type: "development", app_identifier: $app_identifier)
    end
  end

  ######################################################
  # Lane ŸÑŸÑÿ®ŸÜÿßÿ°
  ######################################################
  desc "Build iOS App"
  lane :build do |options|
    flavor_config(options)
    match_sync

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "staging", 
      clean: true,
      configuration: "Release",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          $app_identifier => "match AppStore com.company.scalablecicd.staging"
        }
      },
      xcargs: "-allowProvisioningUpdates DEVELOPMENT_TEAM=KXF5M678R5",
    )
  end

  ######################################################
  # Lane ŸÑŸÑÿ±ŸÅÿπ ÿπŸÑŸâ TestFlight
  ######################################################
  desc "Upload build to TestFlight"
  lane :upload do |options|
    login
    upload_to_testflight(
      ipa: Actions.lane_context[SharedValues::IPA_OUTPUT_PATH],
      skip_waiting_for_build_processing: false
    )
  end
end
